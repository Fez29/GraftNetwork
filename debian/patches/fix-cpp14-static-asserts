Description: Fix C++11 one-argument static_asserts
 The first change here is particularly sad: a static assert for C++11 support that itself requires
 C++14.
Author: Jason Rhinelander <jason@imaginary.ca>

---
The information above should follow the Patch Tagging Guidelines, please
checkout http://dep.debian.net/deps/dep3/ to learn about the format. Here
are templates for supplementary fields that you might want to add:

Origin: <vendor|upstream|other>, <url of original patch>
Bug: <url in upstream bugtracker>
Bug-Debian: https://bugs.debian.org/<bugnumber>
Bug-Ubuntu: https://launchpad.net/bugs/<bugnumber>
Forwarded: <no|not-needed|url proving that it has been forwarded>
Reviewed-By: <name and email of someone who approved the patch>
Last-Update: 2019-03-15

--- graft-1.7.0+gc1.orig/src/utils/cryptmsg.cpp
+++ graft-1.7.0+gc1/src/utils/cryptmsg.cpp
@@ -33,7 +33,7 @@
 
 namespace {
 
-static_assert(201103L <= __cplusplus);
+static_assert(201103L <= __cplusplus, "C++11 compiler required");
 
 #if 0
 //can be used to check manually
@@ -100,7 +100,7 @@ struct CryptoMessageHead
 uint32_t getBhash(const crypto::public_key& B)
 {
     uint32_t res = 0;
-    static_assert(sizeof(B) % sizeof(res) == 0);
+    static_assert(sizeof(B) % sizeof(res) == 0, "public key size must be a multiple of 4");
     const uint32_t* p = reinterpret_cast<const uint32_t*>(&B);
     for(int i = 0, cnt = sizeof(B) / sizeof(res); i < cnt; ++i, ++p)
     {
